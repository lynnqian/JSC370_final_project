---
title: "HW2"
author: "Yufan Qian"
date: "19/02/2022"
output: 
  prettydoc::html_pretty:
    theme: hpstr
---

### Data Wrangling

#### load datasets and libraries
```{r message=FALSE, echo=FALSE}
# load the library we need
library(data.table)
library(dplyr)
library(ggplot2)
library(leaflet)
library(mgcv)

# load in the data
individual_raw <- data.table::fread("chs_individual.csv")
regional_raw <- data.table::fread("chs_regional_geo.csv")

# merge the data
merged_data <- merge(individual_raw, regional_raw)
```

The individual data includes personal and health characteristics of children in 12 communities across Southern California. 
The regional data include air quality measurements at the community level.

#### 1. checking datasets after merging
```{r echo=FALSE}
cat("number of rows in the individual dataset: ", nrow(individual_raw), "\n")
cat("number of rows in the regional dataset: ", nrow(regional_raw), "\n")
cat("number of rows in the merged dataset: ", nrow(merged_data), "\n")
```

```{r, echo=FALSE, results='hide'}
# all the variables with missing values
names(which(sapply(merged_data, anyNA)))

# impute
setDT(merged_data)
merged_data[, agepft := fcoalesce(agepft, mean(agepft, na.rm = T)), by = .(male, hispanic)]
merged_data[, height := fcoalesce(height, as.integer(mean(height, na.rm = T))), by = .(male, hispanic)]
merged_data[, weight := fcoalesce(weight,  as.integer(mean(weight, na.rm = T))), by = .(male, hispanic)]
merged_data[, bmi := fcoalesce(bmi, mean(bmi, na.rm = T)), by = .(male, hispanic)]
merged_data[, asthma := fcoalesce(asthma, as.integer(mean(asthma, na.rm = T))), by = .(male, hispanic)]
merged_data[, father_asthma := fcoalesce(father_asthma, as.integer(mean(father_asthma, na.rm = T))), by = .(male, hispanic)]
merged_data[, mother_asthma := fcoalesce(mother_asthma, as.integer(mean(mother_asthma, na.rm = T))), by = .(male, hispanic)]
merged_data[, wheeze := fcoalesce(wheeze, as.integer(mean(wheeze, na.rm = T))), by = .(male, hispanic)]
merged_data[, hayfever := fcoalesce(hayfever, as.integer(mean(hayfever, na.rm = T))), by = .(male, hispanic)]
merged_data[, allergy := fcoalesce(allergy, as.integer(mean(allergy, na.rm = T))), by = .(male, hispanic)]
merged_data[, educ_parent := fcoalesce(educ_parent, as.integer(mean(educ_parent, na.rm = T))), by = .(male, hispanic)]
merged_data[, smoke := fcoalesce(smoke, as.integer(mean(smoke, na.rm = T))), by = .(male, hispanic)]
merged_data[, gasstove := fcoalesce(gasstove, as.integer(mean(gasstove, na.rm = T))), by = .(male, hispanic)]
merged_data[, fev := fcoalesce(fev, mean(fev, na.rm = T)), by = .(male, hispanic)]
merged_data[, fvc := fcoalesce(fvc, mean(fvc, na.rm = T)), by = .(male, hispanic)]
merged_data[, mmef := fcoalesce(mmef, mean(mmef, na.rm = T)), by = .(male, hispanic)]
merged_data[, no_24hr := fcoalesce(no_24hr, mean(no_24hr, na.rm = T)), by = .(male, hispanic)]
merged_data[, pm2_5_fr := fcoalesce(pm2_5_fr, mean(pm2_5_fr, na.rm = T)), by = .(male, hispanic)]

names(which(sapply(merged_data, anyNA)))
```

After checking all the variables in the merged dataset, I found the ones with missing values:

"agepft", "height", "weight", "bmi", "asthma", "father_asthma", "mother_asthma", "wheeze", "hayfever", "allergy", "educ_parent", "smoke", "gasstove", "fev", "fvc", "mmef", "no_24hr", "pm2_5_fr".

After impute using the average within the variables “male” and “hispanic”, there is no variable with missing values.

#### 2. create new variable: obesity_level

The new variable obesity_level has a value of "underweight" if BMI < 14; value of "normal" if BMI is betwen 14 and 22; value of "overweight" if BMI has a value between 22 and 24; value of obese if BMI > 24.

Here is a summary table that contains the minimum BMI, maximum BMI, and the total number of observations per category
```{r echo=FALSE}
# add new variable: obesity_level
merged_data$obesity_level <- ifelse(merged_data$bmi < 14, "underweight", 
                                    ifelse(merged_data$bmi < 22, "normal", 
                                           ifelse(merged_data$bmi < 24, "overweight", "obese")))

# summary table
tibble(`minimum BMI` = min(merged_data$bmi, na.rm = T),
       `maximum BMI` =  max(merged_data$bmi, na.rm = T),
       `underweight counts` = nrow(merged_data[merged_data$obesity_level == "underweight",]),
       `normal counts` = nrow(merged_data[merged_data$obesity_level == "normal",]),
       `overweight counts` = nrow(merged_data[merged_data$obesity_level == "overweight",]),
       `obese counts` = nrow(merged_data[merged_data$obesity_level == "obese",]),
       ) %>%
  knitr::kable(caption = "summary table for BMI values")
```

#### 3. create new variable: smoke_gas_exposure

Now we create a new categorical variable named smoke_gas_exposure, which has a value of "both" if both smoke and gasstove has value 1, "only smoke" if only smoke has value 1, "only gasstove" if only gasstove has value 1, and "none" if both has value 0.

Here are the first 6 values we get in the smoke_gas_exposure variable:
```{r echo=FALSE}
# summarizes "Second Hand Smoke" and "Gas Stove", four categories in total
merged_data$smoke_gas_exposure <- ifelse(merged_data$smoke == 1 & merged_data$gasstove == 1, "both",
                                         ifelse(merged_data$smoke == 1 & merged_data$gasstove == 0, "only smoke",
                                                ifelse(merged_data$smoke == 0 & merged_data$gasstove == 1, "only gasstove", "none")))
head(merged_data$smoke_gas_exposure)
```


#### 4. summary tables

table for asthma indicator by town
```{r message=FALSE, echo=FALSE}
# showing the average (or proportion, if binary) and sd of “Forced expiratory volume in 1 second (ml)”
# asthma indicator by town, sex, obesity level, and “smoke_gas_exposure”

# table for asthma indicator by town
merged_data %>%
  group_by(townname) %>%
  dplyr::summarise(
    "average of fev" = mean(fev),
    "standard deviation of fev" = sd(fev),
    "proportion of asthma" = sum(asthma)/n(),
    "standard deviation of asthma" = sd(asthma)
  ) %>%
  knitr::kable()
```

table for asthma indicator by sex
```{r message=FALSE, echo=FALSE}

# table for asthma indicator by sex
merged_data %>%
  group_by(male) %>%
  dplyr::summarise(
    "average of fev" = mean(fev),
    "standard deviation of fev" = sd(fev),
    "proportion of asthma" = sum(asthma)/n(),
    "standard deviation of asthma" = sd(asthma)
  ) %>%
  knitr::kable()
```

table for asthma indicator by obesity level
```{r message=FALSE, echo=FALSE}
# table for asthma indicator by obesity level
merged_data %>%
  group_by(obesity_level) %>%
  dplyr::summarise(
    "average of fev" = mean(fev),
    "standard deviation of fev" = sd(fev),
    "proportion of asthma" = sum(asthma)/n(),
    "standard deviation of asthma" = sd(asthma)
  ) %>%
  knitr::kable()
```

table for asthma indicator by “smoke_gas_exposure"
```{r message=FALSE, echo=FALSE}
# table for asthma indicator by “smoke_gas_exposure"
merged_data %>%
  group_by(smoke_gas_exposure) %>%
  dplyr::summarise(
    "average of fev" = mean(fev),
    "standard deviation of fev" = sd(fev),
    "proportion of asthma" = sum(asthma)/n(),
    "standard deviation of asthma" = sd(asthma)
  ) %>%
  knitr::kable()
```

<br/>

### Looking at the Data

#### The primary questions of interest are:
1. What is the association between BMI and FEV (forced expiratory volume)? 
2. What is the association between smoke and gas exposure and FEV? 
3. What is the association between PM2.5 exposure and FEV?


```{r message=FALSE, echo=FALSE, results='hide'}
dim(merged_data)
summary(merged_data)
```
First we want to check the merged data. The dimensions of the merged data is: 1200 * 51. After taking a look at the summary, we don't any missing values due to imputing in previous steps, and all the values look normal for their categories.

Now we check all the key variables in our data based on the primary questions of interest: BMI, FEV, smoke_gas_exposure, pm2.5 mass, lontitude and latitude.
```{r message=FALSE, echo=FALSE, results='hide'}
summary(merged_data$bmi)
summary(merged_data$fev)
summary(merged_data$fvc)
summary(merged_data$pm25_mass)
```
(We have already checked smoke_gas_exposure in previous steps.)

The min value for BMI is 11.30, and max value is 41.27. After checking online, I have found that the BMI range 11.30 to 41.27 is acceptable, although the lower one is pretty rare. The min value for FEV is 984.8, and max value is 3323.7. FEV is usually compared with FVC, so after taking a look at summary for FVC, we see that the min is 895 and max is 3698. According to online documents, the ratio between FEV and FVC is usually above 0.7, so I think both variables' data are reliable. Lastly, the pm25_mass has a min value of 5.960 and a max value of 29.970, which is acceptable since any PM2.5 ,ass at or below 12 is considered healthy and unhealthy is exceeds 35.

#### 1. Scatterplots
```{r message=FALSE, echo=FALSE}
merged_data %>%
  ggplot() + 
  aes(x = bmi, y=fev, color=townname) +
  xlab("BMI") +
  ylab("FEV") +
  geom_jitter() + 
  facet_wrap(~townname) +
  stat_smooth(method=lm) +
  theme_minimal() +
  labs(title = "scatterplots with regression lines of BMI vs FEV")
```

Here, we use the scatter plot with regression line to examine the association between BMI and FEV, by town names. From this graph, we could see that for different town, the amount of FEV changed by BMI are different, but they all have a positive relationship between BMI and FEV. Thus, as BMI increases, we would expect to see an increase in FEV for every town.


#### 2. Stacked histograms

```{r message=FALSE, echo=FALSE}

merged_data %>%
  ggplot() + 
  aes(x = fev, fill=obesity_level) +
  xlab("FEV") +
  labs(fill = "Obesity Level") +
  scale_fill_brewer(palette = "Set2") +
  geom_histogram() +
  theme_gray() +
  labs(title = "stacked histogram of FEV by BMI category")

merged_data %>%
  ggplot() + 
  aes(x = fev, fill=smoke_gas_exposure) +
  xlab("FEV") +
  labs(fill = "Smoke/Gas Exposure") +
  scale_fill_brewer(palette = "Set3") +
  geom_histogram() +
  theme_gray() + 
  labs(title = "stacked histogram of FEV by smoke/gas exposure")
```

Now, we are trying to see the relationship between FEV and BMI, and FEV and smoke/gas exposure by using stacked histograms. The theme I have used in these two histograms is theme_gray(), and set2 for bars in first graph, set3 for bars in second graph.

From the first graph, we could see that the graph is covered mostly by green, which is the color for people with normal BMI. Thus most of the people in our data have normal BMI. We could also see that the orange area and blue area has a mean between 2000 and 2500, green area has a mean around 2000, while pink area has a mean between 1500 and 2000. This means that on average, people who are obese and overweight has a higher FEV than those who are normal in BMI, while people who are underweight has the lowest average FEV. 

From the second graph, we could see that the graph is covered mostly by purple, which is the color for people who are only under the exposure of gasstove. This means most of the people in our data are only under the exposure of gasstove. For all of the four different categories in smoke/gas exposure, we could see that they all have their FEV mean at around 2000(in the center) and look symmetric, which means smoke/gas exposure is not a factor for different FEV.
 

#### 3. Barchart

```{r message=FALSE, echo=FALSE}
merged_data %>%
  ggplot() + 
  aes(x = obesity_level, fill = smoke_gas_exposure) +
  xlab("Obesity Level") +
  labs(fill = "Smoke/Gas Exposure") +
  geom_bar(position = "dodge") +
  scale_fill_brewer(palette = "Accent") + 
  theme_minimal() + 
  labs(title = "barchart of BMI by smoke/gas exposure")

```

Now, we are checking the relationship between smoke/gas exposure and BMI level through the barchart. First of all, we could see that people with exposure to only gasstove(orange bar) are the most within all of the four different obesity levels. And the second most is people with exposure to none, then to both, and last to only smoke. These are the same for all four different obesity levels too. Thus in conclusion, there appears to be no relationship between smoke/gas exposure and BMI level.


#### 4. Statistical summary graphs

```{r message=FALSE, echo=FALSE}
merged_data %>%
  ggplot() + 
  aes(x = obesity_level, y = fev) +
  xlab("Obesity Level") +
  ylab("FEV") + 
  stat_summary(fun.data = "mean_sdl", geom = "errorbar") + 
  stat_summary(fun.data = "mean_sdl") +
  theme_minimal() + 
  labs(title = "statistical summary graph of FEV by BMI")

merged_data %>%
  ggplot() + 
  aes(x = smoke_gas_exposure, y = fev) +
  xlab("Smoke/Gas Exposure") +
  ylab("FEV") + 
  stat_summary(fun.data = "mean_sdl", geom = "errorbar") + 
  stat_summary(fun.data = "mean_sdl") +
  theme_minimal() + 
  labs(title = "statistical summary graph of FEV by smoke/gas exposure category")
```

Here we have one statistical summary graph of FEV by BMI, and another of FEV by smoke/gas exposure.

From the first summary graph, we could see that the mean FEV for obese > mean FEV for overweight > mean FEV for normal > mean FEV for underweight, which is the same result as we had for the stacked histogram: people who are more overweight has a higher FEV level, while people who are more underweight has a lower FEV level.

The second summary graph shows relatively the same mean FEV for four different kinds of smoke/gas exposure, thus again we found no relationship between FEV and smoke/gas exposure.


#### 5. Leaflet map showing the concentrations of PM2.5 mass in each of the CHS communities

```{r message=FALSE, echo=FALSE}
pm_pal <- colorNumeric(c('yellow', 'green', 'red'),
domain = merged_data$pm25_mass, na.color = NA)

merged_data %>%
  leaflet() %>%
  addProviderTiles('OpenStreetMap') %>%
  addCircles(lat=~lat, lng=~lon, color = ~pm_pal(merged_data$pm25_mass),
             label = ~paste(round(merged_data$pm25_mass, 2), 'rh'), opacity = 1, fillOpacity = 1, radius = 5) %>%
  addLegend('bottomleft', pal=pm_pal, values=merged_data$pm25_mass, title = "PM2.5 mass", opacity = 1)
```

From the map and the points we generated above, we could see that the red point near Riverside is surrounded by green points, which are then surrounded by yellow points. Since more red indicates more PM2.5 mass and more yellow means less PM2.5 mass, we can conclude that the more we getting near big cities(near Riverside), the more PM2.5 we will found. The more we move away from big cities, the less PM2.5 we will found.

#### 6. Examine whether PM2.5 mass is associated with FEV

```{r message=FALSE, echo=FALSE}
merged_data %>%
  ggplot() +
  aes(x = pm25_mass, y=fev) +
  stat_smooth(method=lm) +
  geom_point() +
  xlab("pm2.5 mass") +
  ylab("FEV") + 
  labs(title = "scatterplot of FEV by PM2.5 mass")
```

The graph is a scatterplot of FEV by PM2.5 mass, with a regression line on it in order to observe any patterns. We could see that the regression line appears to be almost flat, and for each different pm2.5 mass, the FEV values appear to be spread out. Thus we can conclude that there is no relationship between FEV and pm2.5 mass.


### Advanced Regression

Finally, we want to examine the association between weight and FEV.

Here, I have used two models, one has linear association, and one has non-linear association, adjusted for age, sex, and race.
```{r message=FALSE, echo=FALSE}
weight_lm <- lm(fev~weight, data = merged_data)
weight_gam <- gam(fev~s(weight, bs = "cr") + agepft + male + as.factor(race), data = merged_data)
# plot the linear association
merged_data %>%
  ggplot() + 
  aes(x = weight, y = fev) +
  geom_point() +
  stat_smooth(method = "lm") +
  xlab("weight") +
  ylab("FEV") +
  labs(title = "linear association between weight and FEV")
# plot the non-linear association
plot(weight_gam, xlab = "weight", ylab = "FEV", main = "non-linear association between weight and FEV")
```


```{r message=FALSE, echo=FALSE, results='hide'}
summary(weight_lm)
summary(weight_gam)
```

For the linear graph: Adjusted R-squared: 0.281 

For the non-linear graph: Adjusted R-squared: 0.382

From the first graph: linear association between weight and FEV, and the linear regression line we have generated, we can see that the points don't fit the line well, thus we would think that FEV and weight does not have a linear relationship. From the second graph: non-linear association between weight and FEV, we can see a clear non-linear relationship between weight and FEV, and we have also adjusted using age, sex, and race. Now we want to check the summaries of the two models to get a better idea on which one performs better.

From the summary for linear model, we found an adjusted R-squared of value 0.281, which means 28.1% of the variance are explained by the independent variable weight. On the other hand, the adjusted R-squared for non-linear model is 0.382, which is higher than 0.281. Since it is adjusted R-squared, so we are not affected by the number of predictors in our model. Thus, we can conlcude that the non-linear model fits better than the linear model.
